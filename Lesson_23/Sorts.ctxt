#BlueJ class context
comment0.target=Sorts
comment0.text=\r\n\ \ Description\ of\ the\ Class\r\n\r\n\ @author\ \ \ \ \ Your\ Name\ Here\r\n\ @created\ \ \ \ Month\ Day,\ Year\r\n
comment1.params=
comment1.target=Sorts()
comment1.text=\r\n\ \ Description\ of\ Constructor\r\n\r\n\ @param\ \ list\ \ Description\ of\ Parameter\r\n
comment10.params=stepCount
comment10.target=void\ setStepCount(int)
comment10.text=\r\n\ \ Modifier\ method\ to\ set\ or\ reset\ the\ step\ count.\ Usually\ called\r\n\ \ prior\ to\ invocation\ of\ a\ sort\ method.\r\n\r\n\ @param\ \ stepCount\ \ \ value\ assigned\ to\ steps\r\n
comment2.params=list
comment2.target=void\ bubbleSort(int[])
comment2.text=\r\n\ \ Description\ of\ the\ Method\r\n\r\n\ @param\ \ list\ \ reference\ to\ an\ array\ of\ integers\ to\ be\ sorted\r\n
comment3.params=list
comment3.target=void\ selectionSort(int[])
comment3.text=\r\n\ \ Description\ of\ the\ Method\r\n\r\n\ @param\ \ list\ \ reference\ to\ an\ array\ of\ integers\ to\ be\ sorted\r\n
comment4.params=list
comment4.target=void\ insertionSort(int[])
comment4.text=\r\n\ \ Description\ of\ the\ Method\r\n\r\n\ @param\ \ list\ \ reference\ to\ an\ array\ of\ integers\ to\ be\ sorted\r\n
comment5.params=a\ first\ mid\ last
comment5.target=void\ merge(int[],\ int,\ int,\ int)
comment5.text=\r\n\ \ Takes\ in\ entire\ vector,\ but\ will\ merge\ the\ following\ sections\r\n\ \ together\:\ \ Left\ sublist\ from\ a[first]..a[mid],\ right\ sublist\ from\r\n\ \ a[mid+1]..a[last].\ \ Precondition\:\ \ each\ sublist\ is\ already\ in\r\n\ \ ascending\ order\r\n\r\n\ @param\ \ a\ \ \ \ \ \ reference\ to\ an\ array\ of\ integers\ to\ be\ sorted\r\n\ @param\ \ first\ \ starting\ index\ of\ range\ of\ values\ to\ be\ sorted\r\n\ @param\ \ mid\ \ \ \ midpoint\ index\ of\ range\ of\ values\ to\ be\ sorted\r\n\ @param\ \ last\ \ \ last\ index\ of\ range\ of\ values\ to\ be\ sorted\r\n
comment6.params=a\ first\ last
comment6.target=void\ mergeSort(int[],\ int,\ int)
comment6.text=\r\n\ \ Recursive\ mergesort\ of\ an\ array\ of\ integers\r\n\r\n\ @param\ \ a\ \ \ \ \ \ reference\ to\ an\ array\ of\ integers\ to\ be\ sorted\r\n\ @param\ \ first\ \ starting\ index\ of\ range\ of\ values\ to\ be\ sorted\r\n\ @param\ \ last\ \ \ ending\ index\ of\ range\ of\ values\ to\ be\ sorted\r\n
comment7.params=arr\ l\ m\ r
comment7.target=void\ testMerge(int[],\ int,\ int,\ int)
comment8.params=a\ first\ last
comment8.target=void\ quickSort(int[],\ int,\ int)
comment8.text=\r\n\ \ Recursive\ quicksort\ of\ an\ array\ of\ integers\r\n\r\n\ @param\ \ a\ \ \ \ \ \ reference\ to\ an\ array\ of\ integers\ to\ be\ sorted\r\n\ @param\ \ first\ \ starting\ index\ of\ range\ of\ values\ to\ be\ sorted\r\n\ @param\ \ last\ \ \ ending\ index\ of\ range\ of\ values\ to\ be\ sorted\r\n
comment9.params=
comment9.target=long\ getStepCount()
comment9.text=\r\n\ \ Accessor\ method\ to\ return\ the\ current\ value\ of\ steps\r\n\r\n
numComments=11
